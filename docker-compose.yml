networks:
  interview-net:
    driver: bridge

services:
  code-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.code-server
    container_name: code-server
    environment:
      - PASSWORD=secret123
      - INTERVIEW_TAKEN_ID=${INTERVIEW_TAKEN_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - REPO_NAME=${REPO_NAME}
      - REPO_URL=${REPO_URL}
      - SUBDOMAIN=${SUBDOMAIN}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - ENVIRONMENT=${ENVIRONMENT}
      - API_URL_VAR_NAME=${API_URL_VAR_NAME}
      - FRONTEND_ENV_TEMPLATE=${FRONTEND_ENV_TEMPLATE}
      - BACKEND_ENV_TEMPLATE=${BACKEND_ENV_TEMPLATE}
      - EXTRA_INSTALL_COMMANDS=${EXTRA_INSTALL_COMMANDS}
    volumes:
      - ./workspace:/home/ubuntu/interviewer-env/workspace
    ports:
      - "8443:8080" # code-server port
      - "3000:3000" # frontend preview port
      - "5000:5000" # backend preview port
      - "9000:9000" # API server port for workspace operations
    depends_on:
      - mongo-db
    networks:
      - interview-net

  mongo-db:
    image: mongo:6.0
    container_name: interview-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: testdb
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d # This mounts your init scripts
    ports:
      - "27019:27017"
    networks:
      - interview-net

volumes:
  mongo_data:
